---
- name: Install packages depencies for Docker
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - locales
      - openssh-server
      - software-properties-common
      - python-docker
      - python-pip
      - python3-pip
    update_cache: true
  become: true

- name: Configure LC_ALL on /etc/environment
  lineinfile:
    path: /etc/environment
    line: "LC_ALL=en_US.UTF-8"
  become: true

- name: Ensure a locale exists
  locale_gen:
    name: en_US.UTF-8
    state: present

- name: Configure LANG on profile
  lineinfile:
    path: /etc/profile
    line: "export LANG=en_US.utf8"
  become: true

- name: Kernel tunning
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes
  become: true

- name: Add an Apt signing key, uses whichever key is at the URL
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  become: true

- name: Add Docker repo
  apt_repository:
    repo: "{{ docker_apt_repository }}"
  become: true

- name: Update repositories cache and install "docker" package
  apt:
    name: docker-ce
    update_cache: yes
  become: true

- name: Install docker-py
  pip:
    name: docker-py
    state: present
  become: true
  notify: "start docker"

- name: Add specific users to "docker" group
  user:
    name: "admin"
    groups: "docker"
    append: True
  become: yes

- name: registry in Docker-Hub
  docker_login:
    username: "{{ docker_username }}"
    password: "{{ docker_password }}"
  become: yes

- name: Copy Google credentials
  copy:
    content: "{{ docker_google_credential }}"
    dest: /etc/docker/docker-logs.json
  become: true

- name: create google auth directory
  file:
    path: /etc/google/auth/
    state: directory
    mode: 0755
  become: true

- name: Copy stackdriver key
  copy:
    content: "{{ stackdriver_key }}"
    dest: /etc/google/auth/application_default_credentials.json
  become: true

- name: Ensure restrict permission of files
  file:
    path: /etc/google/auth/application_default_credentials.json
    owner: root
    group: root
    # when specifying mode using octal numbers, add a leading 0
    mode: 0600
  become: true

- name: Configure APPLICATION_DEFAULT_CREDS on profile
  lineinfile:
    path: /etc/profile
    line: "export APPLICATION_DEFAULT_CREDS=/etc/google/auth/application_default_credentials.json"
  become: true

- name: Install Stackdriver Agent
  script: /usr/local/bin/install-monitoring-agent.sh
  register: script_output
  changed_when: false
  failed_when: false
  become: true
  notify: "start stackdriver"

- name: Allow 'admin' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%admin'
    line: '%admin ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  become: yes

- name: Copy Daemon.json to /etc/docker
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: 0644
  become: true

- name: Creation expansion configurion to Docker
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755
  become: true

- name: Copy Docker override configuration
  template:
    src: docker-service-override.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker-service-override.conf
    mode: 0644
  become: true
  notify: "restart docker"

- name: Apery | Create Unit file
  template:
    src: apery.service.j2
    dest: /etc/systemd/system/apery.service
    mode: 0644
  become: true
  notify: "start apery"
